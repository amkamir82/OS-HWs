#line 1
default_goal
میگوید که اگر تارگتی هنگام زدن دستور
make
ست نشده باشد، به کدام تارگت پیش فرض برود.

#line 3
در اینجا متغیری را مشخص میکنیم و آن را برابر با 
gcc
قرار میدهیم به این معنی که کامپایلر ما 
gcc
است.

#line 4
در این متغیر اپشن
-Wall
گذاشته شده که همانطور در سوال آخر نیز داشتیم به معنی آن است که هشدارها یا همان
warning
فعال شود.

#line 5
این متغیر نام فایل‌هایی که قرار است کامپایل شوند را دارد. البته این متغیر در تارگت 
EXECUTABLE
استفاده می‌شود، زیرا ممکن است ما دستوری مانند زیر بزنیم:
make main
که در این صورت چون ما خودمان مشخص کردیم که چه فایلی کامپایل شود پس دیگر از این متغیر استفاده نمیشود.

#line 6
یک کامنت است که گفته است اگر خودتان سورت را پیاده سازی کردید متغیر زیر را کامنت کنید تا به طور پیش فرض از سورت خود تمرین استفاده نشود.

#line 7
در اینجا مشخص میکنیم که از کتابخانه 
wc_sort
برای اجرای برنامه استفاده کند.

#line 8
این متغیر مشخص میکند که فایل باینری اجرایی را کجا بریزد (در تارگت ها بعد از اپشن ساخت فایل بعد از کامپایل شدن میاید)

#line 10
علامت درصد مشخص کننده رجکس است. مثلا در 
sql
نیز این علامت را دیده‌ایم که به معنی یک الگو برای یک رشته غیرخالی که با پسوند
.c
تمام شود است. که برای هر فایلی قابل اجراس

#line 11
در صورتی که که به این تارگت برسیم، بر اساس متغیر هایی که بالاتر تعریف کرده بودیم برنامه مان را کامپایل میکنیم و فایل اجرایی آن را در فایلی با نام خود همان فایل بدون پسوند
.c
میریزد.

$@
به معنی عبارت مچ شده با الگویمان است و
$^
به معنی عبارت مچ شده با الگویمان اما با پسوند 
.c
است. در واقع در این نماد کل عبارت مچ شده به صورت کامل میاید. مثلا در بالاتر که گفتم اگر ما بزنیم
make main
این تارگت به این شکل است که اگر فایل
main.c
موجود باشد دستور زیر را بر اساس متغیر ها اجرا میکند.
gcc -wall wc_sort.o -o main main.c

#line 13
نام تارگت 
clean
است

#line 14
مشخص میکند که در این تارگت چه اتفاقی بیوفتد که این دستور مشخص میکند فایل باینتری تولید شده را پاک کند. 

#line 16
نام تارگت
executable
است

#line 17
مشخص میکند که در این تارگت  فایل‌هایی که در متغیر
sources
ریخته بودیم با کامپایلر 
gcc
کامپایل شده و تمامی هشدارها نیز فعال باشد و 
همچنین از کتابخانه سورت تمرین استفاده کرده و فایل اجرایی را در 
words
که بالاتر نیز متغیرش تعریف شده بود بریزد.

#line 19
تارگت دیفالت است که در خط اول داشتیم و به این معنی است که هنگامی به این تارگت اومدیم به صورت خودکار تارگت
executable
اجرا شود.

